@inherits DotNetNuke.Web.Mvc.Framework.DnnWebViewPage
@using DotNetNuke.Web.Mvc.Helpers

<style>
    /* Global styles */
    #Items-@Dnn.ModuleContext.ModuleId {
        max-width: 1200px;
        margin: 0 auto;
        padding: 20px;
        font-family: 'Arial', sans-serif;
        background-color: #f8f9fa;
        border-radius: 10px;
        box-shadow: 0 4px 20px rgba(0, 0, 0, 0.1);
    }

    h2 {
        color: #333;
        text-align: center;
        margin-bottom: 20px;
        font-size: 28px;
        font-weight: 700;
    }

    /* Upload and button styles */
    #image-upload, #analyze-btn {
        display: inline-block;
        margin: 10px 5px;
        padding: 10px;
        font-size: 16px;
        border-radius: 5px;
        cursor: pointer;
        transition: all 0.3s ease;
    }

    #image-upload {
        border: 2px solid #007bff;
        background-color: #fff;
        color: #007bff;
    }

    #image-upload:hover {
        background-color: #007bff;
        color: #fff;
    }

    #analyze-btn {
        background-color: #ff8080;
        color: #fff;
        border: none;
        padding: 10px 20px;
    }

    #analyze-btn:disabled {
        background-color: #6c757d;
        cursor: not-allowed;
    }

    #analyze-btn:hover:not(:disabled) {
        background-color: #218838;
        transform: translateY(-2px);
    }

    /* Drag and drop area */
    .drop-area {
        border: 2px dashed #007bff;
        padding: 20px;
        text-align: center;
        margin: 10px 0;
        border-radius: 5px;
        background-color: #fff;
        transition: all 0.3s ease;
    }

    .drop-area.drag-over {
        background-color: #e6f3ff;
        border-color: #0056b3;
        transform: scale(1.02);
    }

    .drop-area p {
        margin: 0;
        color: #333;
        font-size: 16px;
    }

    /* Preview image */
    #preview {
        text-align: center;
        margin: 20px 0;
    }

    #image-preview {
        max-width: 300px;
        border-radius: 8px;
        box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
    }

    /* Result message */
    #result {
        text-align: center;
        font-size: 18px;
        margin: 20px 0;
        padding: 10px;
        border-radius: 5px;
    }

    #result p {
        margin: 0;
    }

    /* Product grid */
    #product-grid {
        display: grid;
        grid-template-columns: repeat(4, 1fr);
        gap: 20px;
        margin-bottom: 20px;
    }

    #product-grid > div {
        background-color: #fff;
        border: 1px solid #e0e0e0;
        border-radius: 8px;
        padding: 15px;
        text-align: center;
        transition: transform 0.3s ease, box-shadow 0.3s ease;
    }

    #product-grid > div:hover {
        transform: translateY(-5px);
        box-shadow: 0 6px 15px rgba(0, 0, 0, 0.15);
    }

    #product-grid img {
        max-width: 100%;
        height: 150px;
        object-fit: contain;
        margin-bottom: 10px;
        border-radius: 5px;
    }

    #product-grid h3 {
        font-size: 16px;
        color: #333;
        margin: 10px 0;
        font-weight: 600;
    }

    #product-grid p.price {
        color: #28a745;
        font-size: 18px;
        font-weight: bold;
        margin: 5px 0;
    }

    #product-grid p.sku {
        color: #6c757d;
        font-size: 12px;
        margin: 5px 0;
    }

    /* Pagination */
    #pagination {
        display: flex;
        justify-content: center;
        align-items: center;
        gap: 10px;
        margin-top: 20px;
    }

    #pagination button {
        padding: 8px 16px;
        border: none;
        background-color: #470000;
        color: #fff;
        border-radius: 5px;
        cursor: pointer;
        transition: background-color 0.3s ease, transform 0.3s ease;
    }

    #pagination button:disabled {
        background-color: #6c757d;
        cursor: not-allowed;
    }

    #pagination button:hover:not(:disabled) {
        background-color: #0056b3;
        transform: translateY(-2px);
    }

    #page-info {
        font-size: 16px;
        color: #333;
    }


    /* Slot machine styles */
    #slot-machine {
        margin-top: 40px;
        padding: 20px;
        background: linear-gradient(145deg, #e0e0e0, #ffffff);
        border-radius: 15px;
        box-shadow: 0 8px 30px rgba(0, 0, 0, 0.2), inset 0 0 10px rgba(0, 0, 0, 0.1);
        text-align: center;
        border: 4px solid #470000;
        position: relative;
        overflow: hidden;
    }

    #slot-machine::before {
        content: '';
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        height: 20px;
        background: linear-gradient(to bottom, #470000, #6c0000);
    }

    #slot-machine::after {
        content: '';
        position: absolute;
        bottom: 0;
        left: 0;
        right: 0;
        height: 20px;
        background: linear-gradient(to top, #470000, #6c0000);
    }

    #reels {
        display: flex;
        justify-content: center;
        gap: 15px;
        margin: 20px 0;
        background: #333;
        padding: 10px;
        border-radius: 10px;
        box-shadow: inset 0 0 10px rgba(0, 0, 0, 0.5);
    }

    .reel {
        width: 100px;
        height: 100px;
        overflow: hidden;
        position: relative;
        border: 2px solid #007bff;
        border-radius: 5px;
        background-color: #fff;
    }

    .reel-inner {
        position: absolute;
        top: 0;
        width: 100%;
        text-align: center;
        font-size: 48px;
        line-height: 100px;
        transition: transform 0.1s linear;
    }

    #spin-btn {
        padding: 12px 24px;
        font-size: 18px;
        border-radius: 8px;
        border: none;
        background: linear-gradient(to right, #ff8080, #ff4d4d);
        color: #fff;
        cursor: pointer;
        transition: all 0.3s ease;
        box-shadow: 0 4px 10px rgba(0, 0, 0, 0.2);
    }

    #spin-btn:hover:not(:disabled) {
        background: linear-gradient(to right, #218838, #1e7e34);
        transform: translateY(-2px);
    }

    #spin-btn:disabled {
        background: #6c757d;
        cursor: not-allowed;
        box-shadow: none;
    }

    #slot-result {
        margin-top: 20px;
        font-size: 18px;
        padding: 10px;
        border-radius: 5px;
    }

    #slot-result p {
        margin: 0;
    }

</style>

<div id="Items-@Dnn.ModuleContext.ModuleId">
    <h2>Állatfelismerés</h2>
    <div class="drop-area" id="drop-area">
        <p>Húzd ide a képet, vagy válassz fájlt</p>
        <input type="file" id="image-upload" accept="image/*" />
    </div>
    <button id="analyze-btn" disabled>Elemzés indítása</button>
    <div id="preview">
        <img id="image-preview" style="display: none;" />
    </div>
    <div id="result"></div>
    <div id="products">
        <div id="product-grid"></div>
        <div id="pagination">
            <button id="prev-page" disabled>Előző</button>
            <span id="page-info"></span>
            <button id="next-page" disabled>Következő</button>
        </div>
    </div>

    <!-- Slot Machine -->
    <div id="slot-machine">
        <h2>Állatos Szerencsejáték</h2>
        <div id="reels">
            <div class="reel" id="reel1"><div class="reel-inner" id="reel1-inner">🐶</div></div>
            <div class="reel" id="reel2"><div class="reel-inner" id="reel2-inner">🐱</div></div>
            <div class="reel" id="reel3"><div class="reel-inner" id="reel3-inner">🐰</div></div>
        </div>
        <button id="spin-btn">Pörgetés</button>
        <div id="slot-result"></div>
    </div>
</div>

@section Scripts {
    <script type="text/javascript">
        // Animal Recognition Script
        const imageUpload = document.getElementById("image-upload");
        const imagePreview = document.getElementById("image-preview");
        const analyzeBtn = document.getElementById("analyze-btn");
        const productGrid = document.getElementById("product-grid");
        const prevPageBtn = document.getElementById("prev-page");
        const nextPageBtn = document.getElementById("next-page");
        const pageInfo = document.getElementById("page-info");
        const dropArea = document.getElementById("drop-area");

        let currentPage = 1;
        let totalPages = 1;
        let products = [];
        const itemsPerPage = 8;

        // Handle file selection (both click and drag)
        function handleFile(file) {
            if (file) {
                const reader = new FileReader();
                reader.onload = function (e) {
                    imagePreview.src = e.target.result;
                    imagePreview.style.display = "block";
                    analyzeBtn.disabled = false;
                };
                reader.readAsDataURL(file);
            } else {
                imagePreview.style.display = "none";
                analyzeBtn.disabled = true;
            }
        }

        // File input change event
        imageUpload.addEventListener("change", function (event) {
            handleFile(event.target.files[0]);
        });

        // Drag and drop events
        dropArea.addEventListener("dragover", (event) => {
            event.preventDefault();
            dropArea.classList.add("drag-over");
        });

        dropArea.addEventListener("dragleave", () => {
            dropArea.classList.remove("drag-over");
        });

        dropArea.addEventListener("drop", (event) => {
            event.preventDefault();
            dropArea.classList.remove("drag-over");
            const file = event.dataTransfer.files[0];
            if (file && file.type.startsWith("image/")) {
                imageUpload.files = event.dataTransfer.files;
                handleFile(file);
            }
        });

        function renderProducts() {
            productGrid.innerHTML = '';
            const startIndex = (currentPage - 1) * itemsPerPage;
            const endIndex = Math.min(startIndex + itemsPerPage, products.length);

            for (let i = startIndex; i < endIndex; i++) {
                const product = products[i];
                const productDiv = document.createElement('div');
                productDiv.innerHTML = `
                            <a href="http://rendfejl1003.northeurope.cloudapp.azure.com:8080/Product-Details/${product.Sku}" style="text-decoration: none; color: inherit;">
                                <img src="http://rendfejl1003.northeurope.cloudapp.azure.com:8080/Portals/0/Hotcakes/Data/products/${product.Bvin}/medium/${product.ImageFileMedium}" alt="${product.ProductName}" onerror="this.src='https://via.placeholder.com/150';" />
                                <h3>${product.ProductName}</h3>
                                <p class="price">${product.SitePrice.toFixed(2)} Ft</p>
                                <p class="sku">Cikkszám: ${product.Sku}</p>
                            </a>
                        `;
                productGrid.appendChild(productDiv);
            }

            pageInfo.textContent = `Oldal ${currentPage} / ${totalPages}`;
            prevPageBtn.disabled = currentPage === 1;
            nextPageBtn.disabled = currentPage === totalPages;
        }

        prevPageBtn.addEventListener('click', () => {
            if (currentPage > 1) {
                currentPage--;
                renderProducts();
            }
        });

        nextPageBtn.addEventListener('click', () => {
            if (currentPage < totalPages) {
                currentPage++;
                renderProducts();
            }
        });

        analyzeBtn.addEventListener("click", function (event) {
            event.preventDefault();
            const file = imageUpload.files[0];
            const resultDiv = document.getElementById("result");

            if (!file) {
                resultDiv.innerHTML = `<p style="background-color: #f8d7da; color: #721c24; padding: 10px; border-radius: 5px;">📌 Kérlek, válassz ki egy képet az elemzéshez.</p>`;
                return;
            }

            const formData = new FormData();
            formData.append("image", file);

            fetch('http://rendfejl1003.northeurope.cloudapp.azure.com:8000/analyze', {
                method: 'POST',
                body: formData
            })
                .then(response => response.json())
                .then(data => {
                    productGrid.innerHTML = '';
                    prevPageBtn.disabled = true;
                    nextPageBtn.disabled = true;
                    pageInfo.textContent = '';

                    let labels = (data.categories && data.categories.detected_labels) || data.detected_labels || [];

                    const labelList = labels.length > 0 ? `<p>🔍 Felismert címkék: ${labels.join(', ')}</p>` : '';

                    if (data.error || (data.categories && data.categories.error)) {
                        resultDiv.innerHTML = `
                <p style="background-color: #f8d7da; color: #721c24; padding: 10px; border-radius: 5px;">
                    ❌ ${data.error || data.categories.error}<br/>
                    ${labelList}
                </p>`;
                    } else if (Array.isArray(data.categories) && data.categories.length > 0) {
                        products = data.categories;
                        totalPages = Math.ceil(products.length / itemsPerPage);
                        currentPage = 1;
                        resultDiv.innerHTML = `
                <p style="background-color: #d4edda; color: #155724; padding: 10px; border-radius: 5px;">
                    ✅ ${products.length} termék található.<br/>
                    ${labelList}
                </p>`;
                        renderProducts();
                    } else {
                        resultDiv.innerHTML = `
                <p style="background-color: #f8d7da; color: #721c24; padding: 10px; border-radius: 5px;">
                    ❌ Nem található megfelelő termék.<br/>
                    ${labelList}
                </p>`;
                    }
                })
        });

        // Slot Machine Script
        const reel1Inner = document.getElementById("reel1-inner");
        const reel2Inner = document.getElementById("reel2-inner");
        const reel3Inner = document.getElementById("reel3-inner");
        const spinBtn = document.getElementById("spin-btn");
        const slotResult = document.getElementById("slot-result");

        const animals = ["🐶", "🐱", "🐰", "🦁", "🐘"];
        let isSpinning = false;

        function spinReels() {
            if (isSpinning) return;
            isSpinning = true;
            spinBtn.disabled = true;
            slotResult.innerHTML = '';

            const spins = 20;
            let currentSpin = 0;

            function animateReel(reelInner, delay) {
                let position = 0;
                const speed = 50; // ms per frame
                const totalDuration = 2000 + delay; // Base duration + stagger
                const interval = setInterval(() => {
                    position -= 100; // Move up by one symbol height
                    reelInner.style.transform = `translateY(${position}px)`;
                    reelInner.textContent = animals[Math.floor(Math.random() * animals.length)];
                    currentSpin++;
                    if (currentSpin >= spins) {
                        clearInterval(interval);
                        // Snap to final position
                        reelInner.style.transition = 'transform 0.3s ease-out';
                        reelInner.style.transform = 'translateY(0)';
                        setTimeout(() => {
                            reelInner.style.transition = 'transform 0.1s linear';
                            if (reelInner === reel3Inner) {
                                checkWin();
                                isSpinning = false;
                                spinBtn.disabled = false;
                            }
                        }, 300);
                    }
                }, speed);
            }

            // Stagger the reels for a more realistic effect
            animateReel(reel1Inner, 0);
            animateReel(reel2Inner, 200);
            animateReel(reel3Inner, 400);
        }

        function checkWin() {
            if (reel1Inner.textContent === reel2Inner.textContent && reel2Inner.textContent === reel3Inner.textContent) {
                slotResult.innerHTML = `<p style="background-color: #d4edda; color: #155724; padding: 10px; border-radius: 5px;">🎉 Nyertél! Három egyforma: ${reel1Inner.textContent}</p>`;
            } else {
                slotResult.innerHTML = `<p style="background-color: #f8d7da; color: #721c24; padding: 10px; border-radius: 5px;">😔 Nem nyertél, próbáld újra!</p>`;
            }
        }

        spinBtn.addEventListener("click", spinReels);
    </script>
}